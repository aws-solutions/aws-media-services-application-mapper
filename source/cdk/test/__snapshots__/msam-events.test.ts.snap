// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`msam-events snapshot test 1`] = `
{
  "Description": "Media Services Application Mapper Event Capture %%VERSION%%",
  "Mappings": {
    "SolutionId": {
      "UserAgent": {
        "Extra": "AwsSolution/SO0048/%%VERSION%%",
      },
    },
  },
  "Parameters": {
    "referencetoMediaServicesApplicationMapperCacheItemTTL6DD8B4F7Ref": {
      "Type": "String",
    },
    "referencetoMediaServicesApplicationMapperDynamoDBModuleStackNestedStackDynamoDBModuleStackNestedStackResource588058D0OutputsMediaServicesApplicationMapperDynamoDBModuleStackAlarmsF6F9E932Ref": {
      "Type": "String",
    },
    "referencetoMediaServicesApplicationMapperDynamoDBModuleStackNestedStackDynamoDBModuleStackNestedStackResource588058D0OutputsMediaServicesApplicationMapperDynamoDBModuleStackCloudWatchEvents6ACDEB1ARef": {
      "Type": "String",
    },
    "referencetoMediaServicesApplicationMapperDynamoDBModuleStackNestedStackDynamoDBModuleStackNestedStackResource588058D0OutputsMediaServicesApplicationMapperDynamoDBModuleStackContent622D5AD1Ref": {
      "Type": "String",
    },
    "referencetoMediaServicesApplicationMapperDynamoDBModuleStackNestedStackDynamoDBModuleStackNestedStackResource588058D0OutputsMediaServicesApplicationMapperDynamoDBModuleStackEventsFE64F5A1Ref": {
      "Type": "String",
    },
    "referencetoMediaServicesApplicationMapperIAMModuleStackNestedStackIAMModuleStackNestedStackResourceF97053D6OutputsMediaServicesApplicationMapperIAMModuleStackEventsRole2AFF40D1Arn": {
      "Type": "String",
    },
  },
  "Resources": {
    "AlarmUpdater6FDC3F1D": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Latest runtime version not supported at this time.",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Role with CloudWatch Logs permissions defined in different template.",
            },
            {
              "id": "W92",
              "reason": "Lambda does not need ReservedConcurrentExecutions.",
            },
            {
              "id": "W89",
              "reason": "Lambda does not need to be in a VPC.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "-",
              [
                "%%BUCKET_NAME%%",
                {
                  "Ref": "AWS::Region",
                },
              ],
            ],
          },
          "S3Key": "%%SOLUTION_NAME%%/%%VERSION%%/events_DEV_0_0_0.zip",
        },
        "Description": "MSAM Lambda for handling CloudWatch alarm state change events.",
        "Environment": {
          "Variables": {
            "ALARMS_TABLE_NAME": {
              "Ref": "referencetoMediaServicesApplicationMapperDynamoDBModuleStackNestedStackDynamoDBModuleStackNestedStackResource588058D0OutputsMediaServicesApplicationMapperDynamoDBModuleStackAlarmsF6F9E932Ref",
            },
            "BUILD_STAMP": "DEV_0_0_0",
            "EVENTS_TABLE_REGION": {
              "Ref": "AWS::Region",
            },
            "SOLUTION_ID": {
              "Fn::FindInMap": [
                "SolutionId",
                "UserAgent",
                "Extra",
              ],
            },
          },
        },
        "Handler": "cloudwatch_alarm.lambda_handler",
        "MemorySize": 2560,
        "Role": {
          "Ref": "referencetoMediaServicesApplicationMapperIAMModuleStackNestedStackIAMModuleStackNestedStackResourceF97053D6OutputsMediaServicesApplicationMapperIAMModuleStackEventsRole2AFF40D1Arn",
        },
        "Runtime": "python3.8",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AlarmUpdaterAlarmChangeStateEventsA22ABD95": {
      "Properties": {
        "EventPattern": {
          "detail-type": [
            "CloudWatch Alarm State Change",
          ],
          "source": [
            "aws.cloudwatch",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AlarmUpdater6FDC3F1D",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AlarmUpdaterAlarmChangeStateEventsAllowEventRuleMediaServicesApplicationMapperEventsModuleStackAlarmUpdater706835E134F56820": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AlarmUpdater6FDC3F1D",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "AlarmUpdaterAlarmChangeStateEventsA22ABD95",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Collector9EBA7CF5": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Latest runtime version not supported at this time.",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Role with CloudWatch Logs permissions defined in different template.",
            },
            {
              "id": "W92",
              "reason": "Lambda does not need ReservedConcurrentExecutions.",
            },
            {
              "id": "W89",
              "reason": "Lambda does not need to be in a VPC.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "-",
              [
                "%%BUCKET_NAME%%",
                {
                  "Ref": "AWS::Region",
                },
              ],
            ],
          },
          "S3Key": "%%SOLUTION_NAME%%/%%VERSION%%/dynamodb_resource_DEV_0_0_0.zip",
        },
        "Description": "MSAM Lambda for handling CloudWatch event notifications",
        "Environment": {
          "Variables": {
            "BUILD_STAMP": "DEV_0_0_0",
            "CLOUDWATCH_EVENTS_TABLE_NAME": {
              "Ref": "referencetoMediaServicesApplicationMapperDynamoDBModuleStackNestedStackDynamoDBModuleStackNestedStackResource588058D0OutputsMediaServicesApplicationMapperDynamoDBModuleStackCloudWatchEvents6ACDEB1ARef",
            },
            "CONTENT_TABLE_NAME": {
              "Ref": "referencetoMediaServicesApplicationMapperDynamoDBModuleStackNestedStackDynamoDBModuleStackNestedStackResource588058D0OutputsMediaServicesApplicationMapperDynamoDBModuleStackContent622D5AD1Ref",
            },
            "EVENTS_TABLE_NAME": {
              "Ref": "referencetoMediaServicesApplicationMapperDynamoDBModuleStackNestedStackDynamoDBModuleStackNestedStackResource588058D0OutputsMediaServicesApplicationMapperDynamoDBModuleStackEventsFE64F5A1Ref",
            },
            "EVENTS_TABLE_REGION": {
              "Ref": "AWS::Region",
            },
            "ITEM_TTL": {
              "Ref": "referencetoMediaServicesApplicationMapperCacheItemTTL6DD8B4F7Ref",
            },
            "SOLUTION_ID": {
              "Fn::FindInMap": [
                "SolutionId",
                "UserAgent",
                "Extra",
              ],
            },
          },
        },
        "Handler": "media_events.lambda_handler",
        "MemorySize": 2560,
        "Role": {
          "Ref": "referencetoMediaServicesApplicationMapperIAMModuleStackNestedStackIAMModuleStackNestedStackResourceF97053D6OutputsMediaServicesApplicationMapperIAMModuleStackEventsRole2AFF40D1Arn",
        },
        "Runtime": "python3.8",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "MediaEvents346D729A": {
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.medialive",
            "aws.mediapackage",
            "aws.mediastore",
            "aws.mediatailor",
            "aws.mediaconnect",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Collector9EBA7CF5",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "MediaEventsAllowEventRuleMediaServicesApplicationMapperEventsModuleStackCollector0814B3F9E4AA863F": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Collector9EBA7CF5",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "MediaEvents346D729A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
}
`;
