// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`msam-browser-app snapshot test 1`] = `
{
  "Description": "Media Services Application Mapper Browser Application %%VERSION%%",
  "Outputs": {
    "MediaServicesApplicationMapperBrowserAppModuleStackMSAMAppBucketCloudFrontDistribution4829FDD0DomainName": {
      "Value": {
        "Fn::GetAtt": [
          "MSAMAppBucketCloudFrontDistributionCA6CDA4B",
          "DomainName",
        ],
      },
    },
  },
  "Parameters": {
    "referencetoMediaServicesApplicationMapperIAMModuleStackNestedStackIAMModuleStackNestedStackResourceF97053D6OutputsMediaServicesApplicationMapperIAMModuleStackWebRole1122C569Arn": {
      "Type": "String",
    },
  },
  "Resources": {
    "MSAMAppBucketCloudFrontCachePolicyAC6B69B5": {
      "Properties": {
        "CachePolicyConfig": {
          "DefaultTTL": 7200,
          "MaxTTL": 86400,
          "MinTTL": 3600,
          "Name": {
            "Fn::Join": [
              "",
              [
                "MediaServicesApplicationMapperBrowserAppModuleStackMSAMAppBucketCloudFrontCachePolicy46E867D5-",
                {
                  "Ref": "AWS::Region",
                },
              ],
            ],
          },
          "ParametersInCacheKeyAndForwardedToOrigin": {
            "CookiesConfig": {
              "CookieBehavior": "none",
            },
            "EnableAcceptEncodingBrotli": false,
            "EnableAcceptEncodingGzip": false,
            "HeadersConfig": {
              "HeaderBehavior": "whitelist",
              "Headers": [
                "Origin",
                "Access-Control-Request-Method",
                "Access-Control-Request-Headers",
              ],
            },
            "QueryStringsConfig": {
              "QueryStringBehavior": "none",
            },
          },
        },
      },
      "Type": "AWS::CloudFront::CachePolicy",
    },
    "MSAMAppBucketCloudFrontDistributionCA6CDA4B": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-CFR4",
              "reason": "If the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net (you set CloudFrontDefaultCertificate to true), CloudFront automatically sets the security policy to TLSv1 regardless of the value that you set here.",
            },
            {
              "id": "AwsSolutions-CFR1",
              "reason": "Geo restriction not supported at this time.",
            },
            {
              "id": "AwsSolutions-CFR2",
              "reason": "AWS WAF integration not supported at this time.",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W70",
              "reason": "If the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net (you set CloudFrontDefaultCertificate to true), CloudFront automatically sets the security policy to TLSv1 regardless of the value that you set here.",
            },
          ],
        },
      },
      "Properties": {
        "DistributionConfig": {
          "Comment": {
            "Fn::Join": [
              "",
              [
                "CDN for ",
                {
                  "Ref": "MSAMBrowserAppBucketB112E0BD",
                },
              ],
            ],
          },
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD",
              "OPTIONS",
            ],
            "CachePolicyId": {
              "Ref": "MSAMAppBucketCloudFrontCachePolicyAC6B69B5",
            },
            "CachedMethods": [
              "GET",
              "HEAD",
              "OPTIONS",
            ],
            "Compress": true,
            "TargetOriginId": "MediaServicesApplicationMapperBrowserAppModuleStackMSAMAppBucketCloudFrontDistributionOrigin1939BB4DB",
            "ViewerProtocolPolicy": "https-only",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Logging": {
            "Bucket": {
              "Fn::GetAtt": [
                "MSAMBrowserAppLoggingBucket898E5B4B",
                "RegionalDomainName",
              ],
            },
            "Prefix": "cloudfront/",
          },
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "MSAMBrowserAppBucketB112E0BD",
                  "RegionalDomainName",
                ],
              },
              "Id": "MediaServicesApplicationMapperBrowserAppModuleStackMSAMAppBucketCloudFrontDistributionOrigin1939BB4DB",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "MSAMAppBucketCloudFrontDistributionOrigin1S3OriginD56D6A8D",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "PriceClass": "PriceClass_All",
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "MSAMAppBucketCloudFrontDistributionOrigin1S3OriginD56D6A8D": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-CFR4",
              "reason": "If the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net (you set CloudFrontDefaultCertificate to true), CloudFront automatically sets the security policy to TLSv1 regardless of the value that you set here.",
            },
            {
              "id": "AwsSolutions-CFR1",
              "reason": "Geo restriction not supported at this time.",
            },
            {
              "id": "AwsSolutions-CFR2",
              "reason": "AWS WAF integration not supported at this time.",
            },
          ],
        },
      },
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Identity for MediaServicesApplicationMapperBrowserAppModuleStackMSAMAppBucketCloudFrontDistributionOrigin1939BB4DB",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "MSAMBrowserAppBucketB112E0BD": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*",
              ],
              "AllowedMethods": [
                "GET",
              ],
              "AllowedOrigins": [
                "*",
              ],
            },
          ],
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "MSAMBrowserAppLoggingBucket898E5B4B",
          },
          "LogFilePrefix": "app-bucket/",
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "MSAMBrowserAppBucketPolicy472FC56D": {
      "Properties": {
        "Bucket": {
          "Ref": "MSAMBrowserAppBucketB112E0BD",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "MSAMBrowserAppBucketB112E0BD",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "MSAMBrowserAppBucketB112E0BD",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "MSAMAppBucketCloudFrontDistributionOrigin1S3OriginD56D6A8D",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "MSAMBrowserAppBucketB112E0BD",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "MSAMBrowserAppLoggingBucket898E5B4B": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "AbortIncompleteMultipartUpload": {
                "DaysAfterInitiation": 5,
              },
              "ExpirationInDays": 365,
              "Id": "Expire Objects After 1 Year",
              "NoncurrentVersionExpiration": {
                "NoncurrentDays": 365,
              },
              "Status": "Enabled",
            },
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "MSAMBrowserAppLoggingBucketPolicy4483AFF0": {
      "Properties": {
        "Bucket": {
          "Ref": "MSAMBrowserAppLoggingBucket898E5B4B",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "MSAMBrowserAppLoggingBucket898E5B4B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "MSAMBrowserAppLoggingBucket898E5B4B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "MSAMWebContent": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BUILD_STAMP": "DEV_0_0_0",
        "BucketName": {
          "Ref": "MSAMBrowserAppBucketB112E0BD",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "MSAMWebContentResourceBB737197",
            "Arn",
          ],
        },
        "StackName": {
          "Ref": "AWS::StackName",
        },
        "ZIP_DIGEST": "ZIP_DIGEST_VALUE",
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "MSAMWebContentResourceBB737197": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Role with AWSLambdaBasicExecutionRole defined in different template.",
            },
            {
              "id": "W89",
              "reason": "Lambda does not need to be in a VPC.",
            },
            {
              "id": "W92",
              "reason": "Lambda does not need ReservedConcurrentExecutions.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "-",
              [
                "%%BUCKET_NAME%%",
                {
                  "Ref": "AWS::Region",
                },
              ],
            ],
          },
          "S3Key": "%%SOLUTION_NAME%%/%%VERSION%%/CUSTOM_RESOURCE_FILE",
        },
        "Description": "MSAM Lambda for custom CloudFormation resource for loading web application",
        "Environment": {
          "Variables": {
            "BUCKET_BASENAME": "%%BUCKET_NAME%%",
            "BUILD_STAMP": "DEV_0_0_0",
            "ZIP_DIGEST": "ZIP_DIGEST_VALUE",
          },
        },
        "Handler": "cfn_bucket_loader.handler",
        "MemorySize": 2560,
        "Role": {
          "Ref": "referencetoMediaServicesApplicationMapperIAMModuleStackNestedStackIAMModuleStackNestedStackResourceF97053D6OutputsMediaServicesApplicationMapperIAMModuleStackWebRole1122C569Arn",
        },
        "Runtime": "python3.10",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "MSAMWebInvalidationResource94603649": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Role with AWSLambdaBasicExecutionRole defined in different template.",
            },
            {
              "id": "W89",
              "reason": "Lambda does not need to be in a VPC.",
            },
            {
              "id": "W92",
              "reason": "Lambda does not need ReservedConcurrentExecutions.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "-",
              [
                "%%BUCKET_NAME%%",
                {
                  "Ref": "AWS::Region",
                },
              ],
            ],
          },
          "S3Key": "%%SOLUTION_NAME%%/%%VERSION%%/CUSTOM_RESOURCE_FILE",
        },
        "Description": "MSAM Lambda for custom resource for invalidating CloudFront after update",
        "Environment": {
          "Variables": {
            "BUCKET_BASENAME": "%%BUCKET_NAME%%",
            "BUILD_STAMP": "DEV_0_0_0",
            "ZIP_DIGEST": "ZIP_DIGEST_VALUE",
          },
        },
        "Handler": "cfn_invalidate_resource.handler",
        "MemorySize": 2560,
        "Role": {
          "Ref": "referencetoMediaServicesApplicationMapperIAMModuleStackNestedStackIAMModuleStackNestedStackResourceF97053D6OutputsMediaServicesApplicationMapperIAMModuleStackWebRole1122C569Arn",
        },
        "Runtime": "python3.10",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "MSAMWebInvalidator": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BUILD_STAMP": "DEV_0_0_0",
        "BucketName": {
          "Ref": "MSAMBrowserAppBucketB112E0BD",
        },
        "DistributionId": {
          "Ref": "MSAMAppBucketCloudFrontDistributionCA6CDA4B",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "MSAMWebInvalidationResource94603649",
            "Arn",
          ],
        },
        "StackName": {
          "Ref": "AWS::StackName",
        },
        "ZIP_DIGEST": "ZIP_DIGEST_VALUE",
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
  },
}
`;
